{"version":3,"sources":["components/Profile/Info/avatar.jpg","components/Profile/Profile.module.css","components/Profile/Banner/Banner.module.css","components/Profile/Banner/banner.jpg","components/Profile/Info/Info.module.css","components/Profile/Info/Status/Status.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Banner/Banner.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/Info/Status/StatusWithHooks.jsx","components/Profile/Info/Info.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/PostsForm/PostsForm.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Banner","className","s","banner","style","backgroundImage","profile","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","StatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","toggleEditMode","updateUserStatus","editingAbility","type","onBlur","onChange","e","currentTarget","autoFocus","status_editingAbility","onDoubleClick","Info","info","avatar","name","fullName","userStatus","loginUserId","userId","text","aboutMe","Post","item","src","image","alt","like","likeCounter","likeCount","likeButton","role","aria-label","maxLength30","maxLength","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","Posts","postsElements","data","map","post","key","id","posts","list","title","formData","addPost","postMessage","resetPost","Profile","userProfile","postsData","ProfileContainer","resultUserId","this","match","params","getUserProfile","getUserStatus","isFetching","Preloader","React","Component","compose","connect","state","auth","getUserProfileThunkCreator","getUserStatusThunkCreator","updateUserStatusThunkCreator","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.6bf3e2f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.18019f1c.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"Banner_banner__1bsgr\"};","module.exports = __webpack_public_path__ + \"static/media/banner.7f8baa96.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"Info_info__13xX5\",\"avatar\":\"Info_avatar__30qTK\",\"name\":\"Info_name__1wlaq\",\"text\":\"Info_text__1GoLb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Status_status__Z0RUI\",\"status_editingAbility\":\"Status_status_editingAbility__2xwMG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2EmvQ\",\"avatar\":\"Post_avatar__3qkL-\",\"name\":\"Post_name__2tcY9\",\"text\":\"Post_text__1cnvX\",\"like\":\"Post_like__lxvJu\",\"likeButton\":\"Post_likeButton__NG0Ko\",\"likeCounter\":\"Post_likeCounter__PlvIW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__tkALa\",\"title\":\"Posts_title__23BoN\",\"list\":\"Posts_list__PAAN3\"};","import React from 'react';\nimport s from './Banner.module.css'\nimport profile from './banner.jpg';\n\n\nconst Banner = () => {\n    return (\n        <div className={s.banner} style={{ backgroundImage: `url(${profile})` }} />\n    )\n};\n\nexport default Banner;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, { useState, useEffect } from 'react';\nimport s from './Status.module.css'\n\nconst StatusWithHooks = props => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status]);\n\n    const toggleEditMode = () => {\n        setEditMode(!editMode);\n\n        if(props.status !== status) {\n            props.updateUserStatus(status);\n        }\n    };\n\n    const statusChange = e => {\n        setStatus(e.currentTarget.value);\n    };\n\n    return (\n        <div>\n            {props.editingAbility ?\n                editMode ?\n                    <input type=\"text\" onBlur={toggleEditMode} onChange={statusChange} value={status} autoFocus />\n                    : <span className={`${s.status} ${s.status_editingAbility}`} onDoubleClick={toggleEditMode}>{props.status}</span>\n                : <span className={s.status}>{props.status}</span>\n            }\n        </div>\n    )\n}\n\nexport default StatusWithHooks;","import React from 'react';\nimport s from './Info.module.css'\nimport avatar from './avatar.jpg';\nimport StatusWithHooks from './Status/StatusWithHooks';\n\nconst Info = props => {\n    return (\n        <div className={s.info}>\n            <div className={s.avatar} style={{ backgroundImage: `url(${avatar})` }} />\n            <div>\n                <h1 className={s.name}>{props.fullName}</h1>\n                {props.userStatus ? <StatusWithHooks status={props.userStatus} editingAbility={props.loginUserId === props.userId} updateUserStatus={props.updateUserStatus} /> : null}\n            </div>\n            <div className={s.text}>\n                {props.aboutMe ? <><b>About me:</b> {props.aboutMe}</>: \"\"}\n            </div>\n        </div>\n    )\n};\n\nexport default Info;","import React from 'react';\nimport s from './Post.module.css'\nimport image from '../../Info/avatar.jpg'\n\nconst Post = props => {\n    return (\n        <li className={s.item}>\n            <img src={image} alt=\"avatar\" className={s.avatar}/>\n            <div>\n                <div className={s.name}>{props.name}</div>\n                <div className={s.text}>{props.text}</div>\n            </div>\n            <div className={s.like}>\n                <span className={s.likeCounter}>{props.likeCount}</span>\n                <button className={s.likeButton}>\n                    <span role=\"img\" aria-label=\"love\">❤️</span>\n                </button>\n            </div>\n        </li>\n    )\n};\n\nexport default Post;","import React from 'react';\nimport {reduxForm, Field} from 'redux-form';\nimport { required, maxLength } from '../../../../utils/validators';\nimport { Textarea } from '../../../common/FormsControls/FormsControls';\n\nconst maxLength30 = maxLength(30);\n\nconst PostsForm = props => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div className=\"form\">\n                <Field name=\"postMessage\" placeholder=\"Сообщение\" component={Textarea} validate={[required, maxLength30]} />\n                <div className=\"formGroup\">\n                    <button className=\"button\">Отправить</button>\n                </div>\n            </div>\n        </form>\n    )\n};\n\nexport default reduxForm({\n    form: 'addPost'\n})(PostsForm);","import React from 'react';\n\nimport Post from './Post/Post';\nimport s from './Posts.module.css'\nimport PostsForm from './PostsForm/PostsForm';\n\nconst Posts = props => {\n    let postsElements = props.data.map(post => <Post key={post.id} likeCount={post.likeCount} name={post.name} text={post.text} />);\n\n    const postsFormSubmit = formData => {\n        props.addPost(formData.postMessage);\n        props.resetPost();\n    };\n\n    return (\n        <div className={s.posts}>\n            <ul className={s.list}>\n                {postsElements}\n            </ul>\n            <div className={s.title}>Написать на стену</div>\n            <PostsForm onSubmit={postsFormSubmit} />\n        </div>\n    )\n};\n\nexport default Posts;","import React from 'react';\n\nimport s from './Profile.module.css';\nimport Banner from './Banner/Banner';\nimport Info from './Info/Info';\nimport Posts from './Posts/Posts';\n\nconst Profile = props => {\n    return (\n        <>\n            <h1 className=\"title\">Profile</h1>\n            <div className={s.profile}>\n                <Banner />\n                <Info {...props.data.userProfile} userStatus={props.data.userStatus} updateUserStatus={props.updateUserStatus} loginUserId={props.userId} />\n                <Posts data={props.data.postsData} addPost={props.addPost} resetPost={props.resetPost} />\n            </div>\n        </>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport {compose} from 'redux';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\n\nimport {addPost, getUserProfileThunkCreator, getUserStatusThunkCreator, updateUserStatusThunkCreator, resetPost} from '../../redux/profile-reducer'\nimport Profile from './Profile';\nimport Preloader from '../common/Preloader/Preloader';\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\n\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let resultUserId = this.props.match.params.userId || this.props.userId;\n        if(resultUserId) {\n            this.props.getUserProfile(resultUserId);\n            this.props.getUserStatus(resultUserId);\n        }\n    }\n\n    render() {\n        return this.props.data.isFetching ? <Preloader /> : <Profile {...this.props} />;\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        data: state.profile,\n        userId: state.auth.id\n    }\n};\n\n\nexport default compose(\n    connect(mapStateToProps, {\n        addPost, getUserProfile: getUserProfileThunkCreator, getUserStatus: getUserStatusThunkCreator,\n        updateUserStatus: updateUserStatusThunkCreator, resetPost\n    }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)"],"sourceRoot":""}